services:
  grafana:
    image: grafana/grafana:11.2.1
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_INSTALL_PLUGINS=
    ports:
      - '3000:3000'
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/main.yaml # configures dashboards
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    depends_on:
      - loki
      - prometheus
      - tempo
    networks:
      - opentelemetry-network

  loki:
    image: grafana/loki:3.2.0
    expose:
      - '3100'
    volumes:
      - ./loki/config.yaml:/mnt/config/loki-config.yaml
    command: -config.file=/mnt/config/loki-config.yaml
    networks:
      - opentelemetry-network

  prometheus:
    image: prom/prometheus:v2.54.1
    ports:
    - '9090:9090'
    volumes:
    - ./prometheus:/etc/prometheus
    # - prom_data:/prometheus
    command: [
      '--web.enable-lifecycle',
      '--config.file=/etc/prometheus/prometheus.yaml',
      '--enable-feature=otlp-write-receiver',
      '--enable-feature=native-histograms'
    ]
    restart: unless-stopped
    networks:
    - opentelemetry-network

  collector:
    image: otel/opentelemetry-collector-contrib:0.110.0-amd64
    command: ['--config=/etc/otel/config.yaml']
    volumes:
      - './collector:/etc/otel'
    ports:
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # OTLP http receiver
    expose:
      - '8888' # Prometheus metrics exposed by the collector
      - '8889' # Prometheus exporter metrics
    networks:
      - opentelemetry-network

  tempo:
    image: grafana/tempo:2.6.0
    command: ['--config.file=/etc/config.yaml']
    volumes:
      - './tempo/config.yaml:/etc/config.yaml'
    expose:
      - '3200'
    networks:
      - opentelemetry-network

networks:
  opentelemetry-network:
    driver: bridge
